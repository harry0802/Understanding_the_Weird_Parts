/*
    * 陳述句與表達式的用法差別:
        1. 表達式
            * 表達式是一個程式碼的單位，會形成一個值。
            * 函數表達式或任何表達式，最終會創造一個值，而這個值不一定要儲存在某個變數中。
        
        2. 陳述句
            * 函數陳述句，陳述句只會做某件事。
            * 陳述句並不會返回任何值，所以稱為陳述句

        JS 因為函數是物件，所以有函數表達式，與函數陳述句。
*/ 

var a ;
// 表達式，因為等號運算子回傳了一個值，會設定該值到記憶體中
a = 3;

// 表達式，用加號運算子回傳了一個值，但並沒有用等號運算子，設定該值到記憶體中。
1 + 3
// 值可以是任何東西

// 陳述句
    // 當在if陳述句（）放進表達式，會形成一個值，而陳述句並不會返回任何值，所以稱為陳述句
    if (a === 0 ){
        console.log('is none')
    }

/*
    函數陳述句:
        當被執行時，不會返回任何值。
        這個函數會被放進記憶體，但他只是陳述句，他不會回傳任何值，直到函數被執行。
        他不會做任何事情，但是他會被提升（Hoisting），在全域執行環境的創造階段
        所以在任何地方調用都是可以的
*/ 

    function stment(){
        console.log('a')
    }

/*
    函數表達式：

*/ 
    var anonymouseFn = function(){
        console.log('函數表達式')
    }